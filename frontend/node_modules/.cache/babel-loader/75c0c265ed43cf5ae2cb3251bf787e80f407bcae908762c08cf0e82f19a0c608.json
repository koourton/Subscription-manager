{"ast":null,"code":"var _jsxFileName = \"/Users/marko/Fakultet/Druga Godina/CS230-Distribuirani/projekat/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport jwt_decode from 'jwt-decode'; // You'll need to install this package\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUser = async () => {\n    try {\n      // Add a /users/me endpoint in your Flask backend or use token data\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      try {\n        // Try to get user data from the API\n        const response = await api.get('/users/me');\n        setUser(response.data);\n      } catch (apiError) {\n        // Fallback: Get user ID from token and then fetch user details\n        const decoded = jwt_decode(token);\n        const userId = decoded.sub || decoded.user_id;\n        const userResponse = await api.get(`/users/${userId}`);\n        setUser(userResponse.data);\n      }\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/login', {\n        username,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      await fetchUser();\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      await api.post('/register', userData);\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jwt_decode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","defaults","headers","common","fetchUser","Error","response","get","data","apiError","decoded","userId","sub","user_id","userResponse","error","console","removeItem","login","username","password","post","access_token","setItem","register","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/marko/Fakultet/Druga Godina/CS230-Distribuirani/projekat/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport jwt_decode from 'jwt-decode'; // You'll need to install this package\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUser = async () => {\n    try {\n      // Add a /users/me endpoint in your Flask backend or use token data\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      \n      try {\n        // Try to get user data from the API\n        const response = await api.get('/users/me');\n        setUser(response.data);\n      } catch (apiError) {\n        // Fallback: Get user ID from token and then fetch user details\n        const decoded = jwt_decode(token);\n        const userId = decoded.sub || decoded.user_id;\n        \n        const userResponse = await api.get(`/users/${userId}`);\n        setUser(userResponse.data);\n      }\n      \n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/login', { username, password });\n      const { access_token } = response.data;\n      \n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      await fetchUser();\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      await api.post('/register', userData);\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        loading,\n        login,\n        register,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}