{"ast":null,"code":"var _jsxFileName = \"/Users/marko/Fakultet/Druga Godina/CS230-Distribuirani/projekat/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUser = async () => {\n    try {\n      // Since we don't have a /users/me endpoint in our backend yet, we'll simulate it\n      // In a real app, you'd have a proper endpoint to get the current user's data\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n\n      // This is just a placeholder that assumes the token is valid\n      // In production, you would verify the token on the server\n      setUser({\n        id: 1,\n        username: 'user',\n        email: 'user@example.com',\n        role: 'user'\n      });\n      setIsAuthenticated(true);\n    } catch (error) {\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/login', {\n        username,\n        password\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      await fetchUser();\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      await api.post('/register', userData);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","defaults","headers","common","fetchUser","Error","id","username","email","role","error","removeItem","login","password","response","post","access_token","data","setItem","register","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/marko/Fakultet/Druga Godina/CS230-Distribuirani/projekat/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUser = async () => {\n    try {\n      // Since we don't have a /users/me endpoint in our backend yet, we'll simulate it\n      // In a real app, you'd have a proper endpoint to get the current user's data\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      \n      // This is just a placeholder that assumes the token is valid\n      // In production, you would verify the token on the server\n      setUser({\n        id: 1,\n        username: 'user',\n        email: 'user@example.com',\n        role: 'user'\n      });\n      setIsAuthenticated(true);\n    } catch (error) {\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (username, password) => {\n    try {\n      const response = await api.post('/login', { username, password });\n      const { access_token } = response.data;\n      \n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      await fetchUser();\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      await api.post('/register', userData);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        loading,\n        login,\n        register,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}