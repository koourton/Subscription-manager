{"ast":null,"code":"var _jsxFileName = \"/Users/marko/Fakultet/Druga Godina/CS230-Distribuirani/projekat/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUser = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n\n      // Ensure the token is properly formatted in the Authorization header\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Extract user info directly from the token\n      try {\n        // Decode the token to get user information\n        const decoded = jwtDecode(token);\n        console.log(\"Token decoded successfully:\", decoded);\n\n        // Get user data from the token claims\n        const userData = {\n          id: decoded.sub,\n          // Flask-JWT-Extended puts user ID in 'sub' claim\n          role: decoded.role,\n          username: decoded.username\n          // We don't have email in the token, but we'll include it if we get it from the API\n        };\n\n        // Try to get additional user data from API\n        try {\n          const response = await api.get('/users/me');\n          // Merge API data with token data\n          Object.assign(userData, response.data);\n        } catch (apiError) {\n          console.log(\"Could not fetch additional user data from API\", apiError);\n          // Continue with just the token data\n        }\n        console.log(\"Setting user data:\", userData);\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (decodeError) {\n        console.error(\"Failed to decode token:\", decodeError);\n        throw decodeError;\n      }\n    } catch (error) {\n      console.error('Error in auth process:', error);\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      console.log(`Attempting login for user: ${username}`);\n      const response = await api.post('/login', {\n        username,\n        password\n      });\n      console.log(\"Login response received:\", response.status);\n      const {\n        access_token\n      } = response.data;\n      if (!access_token) {\n        console.error(\"No token in response\");\n        return false;\n      }\n      console.log(\"Token received successfully\");\n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      await fetchUser();\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/register', userData);\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // For debugging\n  console.log(\"Auth context current state:\", {\n    isAuthenticated,\n    user,\n    loading\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","token","localStorage","getItem","defaults","headers","common","fetchUser","Error","decoded","console","log","userData","id","sub","role","username","response","get","Object","assign","data","apiError","decodeError","error","removeItem","login","password","post","status","access_token","setItem","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/marko/Fakultet/Druga Godina/CS230-Distribuirani/projekat/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { jwtDecode } from 'jwt-decode';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUser = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('No token found');\n      }\n      \n      // Ensure the token is properly formatted in the Authorization header\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Extract user info directly from the token\n      try {\n        // Decode the token to get user information\n        const decoded = jwtDecode(token);\n        console.log(\"Token decoded successfully:\", decoded);\n        \n        // Get user data from the token claims\n        const userData = {\n          id: decoded.sub, // Flask-JWT-Extended puts user ID in 'sub' claim\n          role: decoded.role,\n          username: decoded.username,\n          // We don't have email in the token, but we'll include it if we get it from the API\n        };\n        \n        // Try to get additional user data from API\n        try {\n          const response = await api.get('/users/me');\n          // Merge API data with token data\n          Object.assign(userData, response.data);\n        } catch (apiError) {\n          console.log(\"Could not fetch additional user data from API\", apiError);\n          // Continue with just the token data\n        }\n        \n        console.log(\"Setting user data:\", userData);\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (decodeError) {\n        console.error(\"Failed to decode token:\", decodeError);\n        throw decodeError;\n      }\n    } catch (error) {\n      console.error('Error in auth process:', error);\n      localStorage.removeItem('token');\n      delete api.defaults.headers.common['Authorization'];\n      setUser(null);\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (username, password) => {\n    try {\n      console.log(`Attempting login for user: ${username}`);\n      const response = await api.post('/login', { username, password });\n      console.log(\"Login response received:\", response.status);\n      \n      const { access_token } = response.data;\n      if (!access_token) {\n        console.error(\"No token in response\");\n        return false;\n      }\n      \n      console.log(\"Token received successfully\");\n      localStorage.setItem('token', access_token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      await fetchUser();\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await api.post('/register', userData);\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // For debugging\n  console.log(\"Auth context current state:\", { isAuthenticated, user, loading });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated,\n        loading,\n        login,\n        register,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}